make.unique(test)
test1 <- make.unique(test)
names(test) <- test1
names(test) <- test
test
names(test) <- test1
test
library(VisHyp)
launchVisHyp()
launchVisHyp()
library(VisHyp)
launchVisHyp()
devtools::load_all(".")
library(VisHyp)
launchVisHyp()
names(test)
test(1,2,3) <- c("logloss", "sad",     "sad.1")
test(1,2,3) <- c("logloss", "sad",     "sad.1")
test <- c(1,2,3)
names(test) <- c("logloss", "sad",     "sad.1")
names(test) <- c("logloss", "sad",     "sad.1")[c("logloss")]
names(test) <- c("logloss", "sad",     "sad.1")
test
names(test)["logloss"]
names(test)[c(1,2)]
sum(c(1,2,3))
count(c(1,2,3))
library(VisHyp)
launchVisHyp()
library(VisHyp)
launchVisHyp()
library(VisHyp)
launchVisHyp()
library(VisHyp)
launchVisHyp()
launchVisHyp()
library(VisHyp)
launchVisHyp()
library(VisHyp)
launchVisHyp()
launchVisHyp()
launchVisHyp()
library(VisHyp)
launchVisHyp()
library(VisHyp)
launchVisHyp()
launchVisHyp()
launchVisHyp()
launchVisHyp()
library(VisHyp)
launchVisHyp()
library(VisHyp)
launchVisHyp()
launchVisHyp()
launchVisHyp()
launchVisHyp()
launchVisHyp()
launchVisHyp()
launchVisHyp()
launchVisHyp()
launchVisHyp()
library(VisHyp)
library(VisHyp)
launchVisHyp()
library(VisHyp)
launchVisHyp()
launchVisHyp()
library(VisHyp)
launchVisHyp()
library(VisHyp)
launchVisHyp()
library(VisHyp)
launchVisHyp()
library(VisHyp)
launchVisHyp()
library(VisHyp)
launchVisHyp()
library(VisHyp)
launchVisHyp()
launchVisHyp()
library(VisHyp)
launchVisHyp()
test <- data.frame(c(1,2,3),c(1,1,1),c(1,2,2))
Filter(function(test)(length(unique(test))>1), test)
names(test) <- c("hallo","ich","bims")
test
Filter(function(test)(length(unique(test))>1), test)
Filter(function(x)(length(unique(x))>1), test)
library(VisHyp)
launchVisHyp()
library(VisHyp)
launchVisHyp()
library(VisHyp)
c(1,2,3) %in% 2
launchVisHyp()
library(VisHyp)
library(VisHyp)
launchVisHyp()
library(VisHyp)
launchVisHyp()
launchVisHyp()
library(VisHyp)
library(VisHyp)
launchVisHyp()
launchVisHyp()
iaml_super_reduced <- readRDS("D:/Simon/Desktop/Studium/6. Semester/Bachelorarbeit/Data/iaml_super_reduced.rds")
task = TaskRegr$new(id = "task_glmnet", backend = iaml_super_reduced, target = "logloss")
View(iaml_super_reduced)
iaml_super_reduced <- iaml_super_reduced$task_id[iaml_super_reduced$task_id == 1067]
iaml_super_reduced <- iaml_super_reduced[iaml_super_reduced$task_id == 1067]
iaml_super_reduced <- readRDS("D:/Simon/Desktop/Studium/6. Semester/Bachelorarbeit/Data/iaml_super_reduced.rds")
iaml_super_reduced <- iaml_super_reduced[iaml_super_reduced$task_id == 1067]
iaml_super_reduced$task_id == 1067
iaml_super_reduced <- iaml_super_reduced[iaml_super_reduced$task_id == 1067,]
task = TaskRegr$new(id = "task_glmnet", backend = iaml_super_reduced, target = "logloss")
plotPartialDependence(task)
plotParallelCoordinate(task)
plotParallelCoordinate(task, autosort = FALSE)
plotParallelCoordinate(task, autosort = true, labelangle = 15)
plotParallelCoordinate(task, autosort = true, labelangle = 15)
plotParallelCoordinate(task, autosort = FALSE, labelangle = 15)
plotParallelCoordinate(task, autosort = t, labelangle = 15)
plotParallelCoordinate(task, autosort = TRUE, labelangle = 15)
library(VisHyp)
iaml_super_reduced <- readRDS("D:/Simon/Desktop/Studium/6. Semester/Bachelorarbeit/Data/iaml_super_reduced.rds")
iaml_super_reduced <- iaml_super_reduced[iaml_super_reduced$task_id == 1067,]
task = TaskRegr$new(id = "task_glmnet", backend = iaml_super_reduced, target = "logloss")
plotParallelCoordinate(task)
plotParallelCoordinate(task, labelangle = 15)
launchVisHyp()
plotParallelCoordinate(task, labelangle = 15, features = c("task_id","learner"))
library(VisHyp)
launchVisHyp()
launchVisHyp()
c(1,2,3)[c(1,2)]
library(VisHyp)
launchVisHyp()
library(VisHyp)
launchVisHyp()
library(VisHyp)
launchVisHyp()
library(VisHyp)
launchVisHyp()
launchVisHyp()
library(VisHyp)
launchVisHyp()
iaml_super_reduced <- readRDS("D:/Simon/Desktop/Studium/6. Semester/Bachelorarbeit/Data/iaml_super_reduced.rds")
iaml_super_reduced <- iaml_super_reduced[iaml_super_reduced$task_id == 1067,]
task = TaskRegr$new(id = "task_glmnet", backend = iaml_super_reduced, target = "logloss")
plotParallelCoordinate(task, labelangle = 15, features = c("task_id","learner"))
plotParallelCoordinate(task, labelangle = 15, features = c("trainsize","learner"))
target = "logloss"
featureImputed <- names(Filter(function(x)(length(unique(x))>1), iaml_super_reduced))
featureImputed <- featureImputed[!featureImputed %in% target]
plotParallelCoordinate(task, labelangle = 15)
featureImputed
task$feature_names
launchVisHyp()
iaml_super_reduced <- readRDS("D:/Simon/Desktop/Studium/6. Semester/Bachelorarbeit/Data/iaml_super_reduced.rds")
iaml_super_reduced <- iaml_super_reduced[iaml_super_reduced$task_id == 1067,]
task = TaskRegr$new(id = "task_glmnet", backend = iaml_super_reduced, target = "logloss")
task$feature_names
plotParallelCoordinate(task, labelangle = 15, features = c("trainsize","learner"))
target = "logloss"
featureImputed <- names(Filter(function(x)(length(unique(x))>1), iaml_super_reduced))
featureImputed <- featureImputed[!featureImputed %in% target]
plotParallelCoordinate(task, labelangle = 15)
featureImputed
task$target_names
launchVisHyp()
launchVisHyp()
View(hyperparam)
n
n
n
n
n
n
n
n
n
n
n
n
n
iaml_super_reduced <- readRDS("D:/Simon/Desktop/Studium/6. Semester/Bachelorarbeit/Data/iaml_super_reduced.rds")
Q
View(iaml_super_reduced)
str(iaml_super_reduced)
launchVisHyp()
n
n
n
n
n
c
Q
launchVisHyp()
n
n
n
f
f
f
c
Q
launchVisHyp()
f
f
f
f
f
Q
launchVisHyp()
f
n
n
Q
launchVisHyp()
n
launchVisHyp()
launchVisHyp()
launchVisHyp()
n
Q
launchVisHyp()
View(iaml_super_reduced)
task$feature_names
task$data()
str(as.data.frame(Task_properties$task$data(), stringsAsFactors = TRUE))
str(as.data.frame(task$data(), stringsAsFactors = TRUE))
launchVisHyp()
launchVisHyp()
plotParallelCoordinate(task, labelangle = 15, features = c("trainsize","learner"),labelside = FALSE)
plotParallelCoordinate(task, labelangle = 15, features = c("trainsize","learner"),labelside = Top)
plotParallelCoordinate(task, labelangle = 15, features = c("trainsize","learner"),labelside = "Top")
plotParallelCoordinate(task, labelangle = 15, features = c("trainsize","learner"),colbarrange = TRUE)
plotParallelCoordinate(task, labelangle = 15, features = c("trainsize","learner"),autosort = FALSE)
plotParallelCoordinate(task, labelangle = 15, features = c("trainsize","learner"),autosort = TRUE)
plotParallelCoordinate(task, labelangle = 15, features = c("trainsize","learner"),colbarreverse = TRUE)
iaml_super_reduced <- readRDS("D:/Simon/Desktop/Studium/6. Semester/Bachelorarbeit/Data/iaml_super_reduced.rds")
iaml_super_reduced <- iaml_super_reduced[iaml_super_reduced$task_id == 1067,]
str(iaml_super_reduced)
task = TaskRegr$new(id = "task_glmnet", backend = iaml_super_reduced, target = "logloss")
task$feature_names
task$target_names
str(as.data.frame(task$data(), stringsAsFactors = TRUE))
plotParallelCoordinate(task, labelangle = 15, features = c("trainsize","learner"),colbarreverse = TRUE)
iaml_super_reduced <- readRDS("D:/Simon/Desktop/Studium/6. Semester/Bachelorarbeit/Data/iaml_super_reduced.rds")
iaml_super_reduced <- iaml_super_reduced[iaml_super_reduced$task_id == 1067,]
str(iaml_super_reduced)
task = TaskRegr$new(id = "task_glmnet", backend = iaml_super_reduced, target = "logloss")
iaml_super_reduced <- iaml_super_reduced[iaml_super_reduced$task_id == 1067,]
str(iaml_super_reduced)
task = TaskRegr$new(id = "task_glmnet", backend = iaml_super_reduced, target = "logloss")
task = TaskRegr$new(id = "task_glmnet", backend = iaml_super_reduced, target = "logloss")
task$feature_names
task$target_names
str(as.data.frame(task$data(), stringsAsFactors = TRUE))
plotParallelCoordinate(task, labelangle = 15,colbarreverse = TRUE)
launchVisHyp()
launchVisHyp()
launchVisHyp()
launchVisHyp()
plotParallelCoordinate(task, labelangle = 15,colbarreverse = TRUE)
launchVisHyp()
launchVisHyp()
launchVisHyp()
launchVisHyp()
launchVisHyp()
str(iaml_super_reduced)
launchVisHyp()
launchVisHyp()
iaml_super_reduced <- readRDS("D:/Simon/Desktop/Studium/6. Semester/Bachelorarbeit/Data/iaml_super_reduced.rds")
iaml_super_reduced <- iaml_super_reduced[iaml_super_reduced$task_id == 1067,]
str(iaml_super_reduced)
task = TaskRegr$new(id = "task_glmnet", backend = iaml_super_reduced, target = "logloss")
task$feature_names
plotParallelCoordinate(task, labelangle = 15,colbarreverse = TRUE)
launchVisHyp()
View(iaml_super_reduced)
length(unique(c(1,NA,1)))
?unique
test <- c()
test[2] <- "htest"
test
launchVisHyp()
test
names(Filter(function(x)(length(unique(x))>2), test)
names(Filter(function(x)(length(unique(x))>2), test))
length(unique(x)) > 2), test
length(unique(test)) > 2)
length(unique(test)) > 2
length(unique(test)) > 1
test <- c(1,23,1,2)
names(Filter(function(x)(length(unique(x))>2), test))
test <- data.frame("hallo"=c(1,2,3),"wie"=c(1,2,3),"geht" = c(1,2,4))
names(Filter(function(x)(length(unique(x))>2), test))
test <- data.frame("hallo"=c(1,2,3),"wie"=c(1,2,3),"geht" = c(1,2,2))
names(Filter(function(x)(length(unique(x))>2), test))
test
names(test)[!test %in% "hallo"]
names(test)[!names(test) %in% "hallo"]
launchVisHyp()
is.numeric(test[,1])
names(Filter(function(x)(length(unique(x))>2), test[,1]))
test[,1]
length(unique(c(1,2,2)))
length(unique(c(1,2,2,3)))
names(test[1])
launchVisHyp()
names(test[1])
launchVisHyp()
launchVisHyp()
launchVisHyp()
launchVisHyp()
launchVisHyp()
launchVisHyp()
launchVisHyp()
library(VisHyp)
library(mlr3)
# A task needs to be created
task = TaskRegr$new(id = "task_glmnet", backend = glmnet_ela, target = "logloss")
plotImportance(task)
warnings()
suppressWarnings(importancePlot(task))
library(VisHyp)
suppressWarnings(importancePlot(task))
suppressWarnings(plotImportance(task))
library(VisHyp)
plotImportance(task)
suppressWarnings(plotImportance(task))
library(VisHyp)
plotImportance(task)
library(VisHyp)
library(VisHyp)
data <- read_csv("D:/Simon/Desktop/Studium/6. Semester/Bachelorarbeit/Data/iaml_rpart.csv")
smashy_super <- readRDS("D:/Simon/Desktop/Studium/6. Semester/Bachelorarbeit/Data/smashy_super.rds")
task = TaskRegr$new(id = "task_glmnet", backend = smashy_super, target = "logloss")
library(VisHyp)
library(mlr3)
library(plotly)
library(patchwork)
library(ggpubr)
library(rstudioapi)
library(mlr3pipelines)
library(iml)
task = TaskRegr$new(id = "task_glmnet", backend = smashy_super, target = "logloss")
task = TaskRegr$new(id = "task_glmnet", backend = smashy_super, target = "yval")
plotImportance(task)
library(VisHyp)
plotImportance(task)
library(VisHyp)
plotParallelCoordinate(task)
plotParallelCoordinate(task, labelangle = 45)
plotParallelCoordinate(task, labelangle = 15)
library(VisHyp)
plotParallelCoordinate(task, labelangle = 15)
library(VisHyp)
plotParallelCoordinate(task, labelangle = 15)
library(VisHyp)
plotHeatmap(task)
plotHeatmap(task, title = FALSE)
?labs
library(VisHyp)
plotHeatmap(task, title = FALSE)
plotHeatmap(task, title = TRUE)
library(VisHyp)
plotPartialDependence(task, title = TRUE)
plotPartialDependence(task, title = FALSE)
library(VisHyp)
plotImportance(task, title = FALSE)
plotImportance(task, title = TRUE)
library(VisHyp)
plotParallelCoordinate(task)
plotParallelCoordinate(task)
library(VisHyp)
plotParallelCoordinate(task)
plotParallelCoordinate(task)
plotParallelCoordinate(task)
plotParallelCoordinate(task)
plotParallelCoordinate(task)
plotParallelCoordinate(task, labelangle = 15)
plotParallelCoordinate(task, labelangle = 15)
plotParallelCoordinate(task, labelangle = 0)
plotParallelCoordinate(task, labelangle = 0)
plotParallelCoordinate(task, labelangle = 0.1)
plotParallelCoordinate(task, labelangle = 0.1)
plotParallelCoordinate(task, labelangle = 0.1)
plotParallelCoordinate(task, labelangle = 0.1)
plotParallelCoordinate(task, labelangle = 0.1)
plotParallelCoordinate(task, labelangle = 0)
plotParallelCoordinate(task, labelangle = 0.2)
plotParallelCoordinate(task, labelangle = 0.6)
plotParallelCoordinate(task, labelangle = 0.6, labelside = "Bottom")
plotParallelCoordinate(task, labelangle = 0.6, autosort = FALSE)
plotParallelCoordinate(task, labelangle = 0.2, autosort = FALSE)
plotParallelCoordinate(task, labelangle = 0.2, autosort = FALSE)
plotParallelCoordinate(task, labelangle = 0.2, autosort = FALSE)
plotParallelCoordinate(task, labelangle = 0.2, autosort = FALSE)
plotParallelCoordinate(task, labelangle = 0.2, autosort = FALSE, title = FALSE)
plotParallelCoordinate(task, autosort = FALSE, title = FALSE)
plotParallelCoordinate(task, autosort = FALSE, title = FALSE, labelangle = 0.2)
plotParallelCoordinate(task, autosort = FALSE, title = FALSE, labelangle = 0.2)
plotParallelCoordinate(task, autosort = FALSE, title = FALSE, labelangle = -0.2)
library(VisHyp)
launchVisHyp()
library(VisHyp)
launchVisHyp()
library(VisHyp)
library(VisHyp)
launchVisHyp()
s
library(VisHyp)
launchVisHyp()
library(VisHyp)
launchVisHyp()
library(VisHyp)
launchVisHyp()
launchVisHyp()
library(VisHyp)
0 > 10
abs(0) > 10
launchVisHyp()
library(VisHyp)
launchVisHyp()
launchVisHyp()
data <- read_csv("D:/Simon/Desktop/Studium/6. Semester/Bachelorarbeit/Data/iaml_rpart.csv")
library(VisHyp)
data <- read_csv("D:/Simon/Desktop/Studium/6. Semester/Bachelorarbeit/Data/iaml_rpart.csv")
load("D:/Simon/Desktop/Studium/6. Semester/Bachelorarbeit/package_VisHyp/data/smashy_super.rda")
# Produced graphics as an example for the bachelor thesis
task = TaskRegr$new(id = "smashy_super", backend = smashy_super, target = "yval")
plotParallelCoordinate(task)
library(VisHyp)
plotParallelCoordinate(task, title )= TRUE
plotParallelCoordinate(task, title = TRUE)
plotParallelCoordinate(task, title = TRUE, labelangle = 15)
plotParallelCoordinate(task, title = TRUE, labelangle = 20)
launchVisHyp()
launchVisHyp()
library(VisHyp)
plotParallelCoordinate(task, title = TRUE, labelangle = 20)
library(VisHyp)
plotParallelCoordinate(task, title = TRUE, labelangle = 20)
launchVisHyp()
launchVisHyp()
1+1
launchVisHyp()
1+1
devtools::load_all(".")
launchVisHyp()
library(VisHyp)
launchVisHyp()
launchVisHyp()
library(VisHyp)
library(VisHyp)
launchVisHyp()
library(VisHyp)
launchVisHyp()
launchVisHyp()
library(VisHyp)
library(VisHyp)
launchVisHyp()
library(VisHyp)
launchVisHyp()
library(VisHyp)
launchVisHyp()
launchVisHyp()
library(VisHyp)
launchVisHyp()
library(VisHyp)
launchVisHyp()
library(VisHyp)
library(VisHyp)
launchVisHyp()
launchVisHyp()
library(VisHyp)
library(VisHyp)
launchVisHyp()
launchVisHyp()
library(VisHyp)
launchVisHyp()
launchVisHyp()
launchVisHyp()
launchVisHyp()
launchVisHyp()
library(VisHyp)
library(mlr3)
library(plotly)
library(patchwork)
library(ggpubr)
library(rstudioapi)
library(mlr3pipelines)
library(iml)
smashy_super <- smashy_super
# Produced graphics as an example for the bachelor thesis
task = TaskRegr$new(id = "smashy_super", backend = smashy_super, target = "yval")
plotParallelCoordinate(task)
plotParallelCoordinate(task)
plotParallelCoordinate(task, titleheight = 0.8)
plotParallelCoordinate(task, titleheight = 0.8, title = TRUE)
plotParallelCoordinate(task, titleheight = 0.98, title = TRUE)
plotParallelCoordinate(task, titleheight = 0.9, title = TRUE)
plotParallelCoordinate(task, titleheight = 0.95, title = TRUE)
library(VisHyp)
launchVisHyp()
library(VisHyp)
launchVisHyp()
library(VisHyp)
launchVisHyp()
?subplot
